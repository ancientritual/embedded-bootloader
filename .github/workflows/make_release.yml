name: Build and Release Firmware

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Install build tools
      run: |
        choco install make mingw gcc-arm-embedded -y

    - name: Add build tools to PATH
      run: |
        echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\ProgramData\chocolatey\lib\gcc-arm-embedded\tools\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Create symbolic link for ARM GCC toolchain
      run: |
        New-Item -ItemType SymbolicLink -Path "C:\Program Files (x86)\Atmel\Studio\7.0\toolchain\arm\arm-gnu-toolchain\bin" -Target "C:\ProgramData\chocolatey\lib\gcc-arm-embedded\tools\bin"

    - name: Build project
      run: |
        cd implementations\samd20-optiboot-custom\samd20-optiboot-custom\Debug
        make all

    - name: Create release artifact
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        mkdir -p release
        cp implementations\samd20-optiboot-custom\samd20-optiboot-custom\Debug\samd20-optiboot-custom.hex release\samd20-optiboot-custom.hex

    - name: Upload release artifact
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v2
      with:
        name: firmware
        path: release/

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: release\samd20-optiboot-custom.hex
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
